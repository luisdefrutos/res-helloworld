pipeline {
    agent any

    options { skipDefaultCheckout() }

    stages {
        stage('Get Code') {
            steps {
                git 'https://github.com/luisdefrutos/res-helloworld.git'
                echo WORKSPACE
                bat 'dir'
                stash name: 'code', includes: '**'
            }
        }

        stage('Build') {
            steps {
                echo 'Eyyy, esto es Python. No hay que compilar nada!!!'
            }
        }

        stage('Tests') {
            parallel {
                stage('Unit') {
                    agent { label 'flask-agent' }
                    steps {
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            unstash name: 'code'
                            bat '''
                                set PYTHONPATH=.
                                pytest --junitxml=result-unit.xml test\\unit
                            '''
                            stash name: 'unit-res', includes: 'result-unit.xml'
                        }
                    }
                }

                stage('Rest') {
                    agent { label 'wiremock-agent' }
                    steps {
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            unstash name: 'code'
                            bat '''
                                set FLASK_APP=app\\api.py

                                start /min cmd /c "flask run"
                                ping -n 10 127.0.0.1

                                start /min cmd /c "java -jar C:\\UNIR\\Ejercicios\\wiremock-standalone-4.0.0-beta.2.jar --port 9090 --root-dir test\\wiremock"
                                ping -n 10 127.0.0.1

                                set PYTHONPATH=.
                                pytest --junitxml=result-rest.xml test\\rest
                            '''
                            stash name: 'rest-res', includes: 'result-rest.xml'
                        }
                    }
                }
            }
        }

        stage('Results') {
            steps {
                unstash name: 'unit-res'
                unstash name: 'rest-res'
                junit 'result*.xml'
            }
        }
    }
}
